//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfServicioVacunas.ReferenciaServicioVacunas2 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoVacunas", Namespace="http://schemas.datacontract.org/2004/07/WcfServicioCoronApp")]
    [System.SerializableAttribute()]
    public partial class DtoVacunas : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CantidadDosisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CovaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EfectosAdversosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EficaciaCtiField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EficaciaHospField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EficaciaPrevField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EmergenciaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FaseClinicaAprobField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdTipoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LapsoDiasDosisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Dominio.EntidadesNegocio.Laboratorio[] ListaLaboratoriosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxEdadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxTempField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MinEdadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MinTempField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PrecioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProduccionAnualField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CantidadDosis {
            get {
                return this.CantidadDosisField;
            }
            set {
                if ((this.CantidadDosisField.Equals(value) != true)) {
                    this.CantidadDosisField = value;
                    this.RaisePropertyChanged("CantidadDosis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Covax {
            get {
                return this.CovaxField;
            }
            set {
                if ((this.CovaxField.Equals(value) != true)) {
                    this.CovaxField = value;
                    this.RaisePropertyChanged("Covax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EfectosAdversos {
            get {
                return this.EfectosAdversosField;
            }
            set {
                if ((object.ReferenceEquals(this.EfectosAdversosField, value) != true)) {
                    this.EfectosAdversosField = value;
                    this.RaisePropertyChanged("EfectosAdversos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EficaciaCti {
            get {
                return this.EficaciaCtiField;
            }
            set {
                if ((this.EficaciaCtiField.Equals(value) != true)) {
                    this.EficaciaCtiField = value;
                    this.RaisePropertyChanged("EficaciaCti");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EficaciaHosp {
            get {
                return this.EficaciaHospField;
            }
            set {
                if ((this.EficaciaHospField.Equals(value) != true)) {
                    this.EficaciaHospField = value;
                    this.RaisePropertyChanged("EficaciaHosp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EficaciaPrev {
            get {
                return this.EficaciaPrevField;
            }
            set {
                if ((this.EficaciaPrevField.Equals(value) != true)) {
                    this.EficaciaPrevField = value;
                    this.RaisePropertyChanged("EficaciaPrev");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Emergencia {
            get {
                return this.EmergenciaField;
            }
            set {
                if ((this.EmergenciaField.Equals(value) != true)) {
                    this.EmergenciaField = value;
                    this.RaisePropertyChanged("Emergencia");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FaseClinicaAprob {
            get {
                return this.FaseClinicaAprobField;
            }
            set {
                if ((this.FaseClinicaAprobField.Equals(value) != true)) {
                    this.FaseClinicaAprobField = value;
                    this.RaisePropertyChanged("FaseClinicaAprob");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdTipo {
            get {
                return this.IdTipoField;
            }
            set {
                if ((object.ReferenceEquals(this.IdTipoField, value) != true)) {
                    this.IdTipoField = value;
                    this.RaisePropertyChanged("IdTipo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LapsoDiasDosis {
            get {
                return this.LapsoDiasDosisField;
            }
            set {
                if ((this.LapsoDiasDosisField.Equals(value) != true)) {
                    this.LapsoDiasDosisField = value;
                    this.RaisePropertyChanged("LapsoDiasDosis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Dominio.EntidadesNegocio.Laboratorio[] ListaLaboratorios {
            get {
                return this.ListaLaboratoriosField;
            }
            set {
                if ((object.ReferenceEquals(this.ListaLaboratoriosField, value) != true)) {
                    this.ListaLaboratoriosField = value;
                    this.RaisePropertyChanged("ListaLaboratorios");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxEdad {
            get {
                return this.MaxEdadField;
            }
            set {
                if ((this.MaxEdadField.Equals(value) != true)) {
                    this.MaxEdadField = value;
                    this.RaisePropertyChanged("MaxEdad");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxTemp {
            get {
                return this.MaxTempField;
            }
            set {
                if ((this.MaxTempField.Equals(value) != true)) {
                    this.MaxTempField = value;
                    this.RaisePropertyChanged("MaxTemp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MinEdad {
            get {
                return this.MinEdadField;
            }
            set {
                if ((this.MinEdadField.Equals(value) != true)) {
                    this.MinEdadField = value;
                    this.RaisePropertyChanged("MinEdad");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MinTemp {
            get {
                return this.MinTempField;
            }
            set {
                if ((this.MinTempField.Equals(value) != true)) {
                    this.MinTempField = value;
                    this.RaisePropertyChanged("MinTemp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre {
            get {
                return this.NombreField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreField, value) != true)) {
                    this.NombreField = value;
                    this.RaisePropertyChanged("Nombre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Precio {
            get {
                return this.PrecioField;
            }
            set {
                if ((this.PrecioField.Equals(value) != true)) {
                    this.PrecioField = value;
                    this.RaisePropertyChanged("Precio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProduccionAnual {
            get {
                return this.ProduccionAnualField;
            }
            set {
                if ((this.ProduccionAnualField.Equals(value) != true)) {
                    this.ProduccionAnualField = value;
                    this.RaisePropertyChanged("ProduccionAnual");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ReferenciaServicioVacunas2.IServicioVacunas")]
    public interface IServicioVacunas {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioVacunas/GetTodasLasVacunas", ReplyAction="http://tempuri.org/IServicioVacunas/GetTodasLasVacunasResponse")]
        WcfServicioVacunas.ReferenciaServicioVacunas2.DtoVacunas[] GetTodasLasVacunas();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioVacunas/GetTodasLasVacunas", ReplyAction="http://tempuri.org/IServicioVacunas/GetTodasLasVacunasResponse")]
        System.Threading.Tasks.Task<WcfServicioVacunas.ReferenciaServicioVacunas2.DtoVacunas[]> GetTodasLasVacunasAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioVacunas/GetTodasLasVacunasPorNombre", ReplyAction="http://tempuri.org/IServicioVacunas/GetTodasLasVacunasPorNombreResponse")]
        WcfServicioVacunas.ReferenciaServicioVacunas2.DtoVacunas[] GetTodasLasVacunasPorNombre(string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioVacunas/GetTodasLasVacunasPorNombre", ReplyAction="http://tempuri.org/IServicioVacunas/GetTodasLasVacunasPorNombreResponse")]
        System.Threading.Tasks.Task<WcfServicioVacunas.ReferenciaServicioVacunas2.DtoVacunas[]> GetTodasLasVacunasPorNombreAsync(string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioVacunas/GetTodasLasVacunasPorFaseAprob", ReplyAction="http://tempuri.org/IServicioVacunas/GetTodasLasVacunasPorFaseAprobResponse")]
        WcfServicioVacunas.ReferenciaServicioVacunas2.DtoVacunas[] GetTodasLasVacunasPorFaseAprob(int faseClinicaAprob);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioVacunas/GetTodasLasVacunasPorFaseAprob", ReplyAction="http://tempuri.org/IServicioVacunas/GetTodasLasVacunasPorFaseAprobResponse")]
        System.Threading.Tasks.Task<WcfServicioVacunas.ReferenciaServicioVacunas2.DtoVacunas[]> GetTodasLasVacunasPorFaseAprobAsync(int faseClinicaAprob);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioVacunas/GetTodasLasVacunasPorPaisLab", ReplyAction="http://tempuri.org/IServicioVacunas/GetTodasLasVacunasPorPaisLabResponse")]
        WcfServicioVacunas.ReferenciaServicioVacunas2.DtoVacunas[] GetTodasLasVacunasPorPaisLab(string pais);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioVacunas/GetTodasLasVacunasPorPaisLab", ReplyAction="http://tempuri.org/IServicioVacunas/GetTodasLasVacunasPorPaisLabResponse")]
        System.Threading.Tasks.Task<WcfServicioVacunas.ReferenciaServicioVacunas2.DtoVacunas[]> GetTodasLasVacunasPorPaisLabAsync(string pais);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioVacunas/GetTodasLasVacunasPorTipoVac", ReplyAction="http://tempuri.org/IServicioVacunas/GetTodasLasVacunasPorTipoVacResponse")]
        WcfServicioVacunas.ReferenciaServicioVacunas2.DtoVacunas[] GetTodasLasVacunasPorTipoVac(string idTipo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioVacunas/GetTodasLasVacunasPorTipoVac", ReplyAction="http://tempuri.org/IServicioVacunas/GetTodasLasVacunasPorTipoVacResponse")]
        System.Threading.Tasks.Task<WcfServicioVacunas.ReferenciaServicioVacunas2.DtoVacunas[]> GetTodasLasVacunasPorTipoVacAsync(string idTipo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioVacunas/GetTodasLasVacunasPorTopeSuperior", ReplyAction="http://tempuri.org/IServicioVacunas/GetTodasLasVacunasPorTopeSuperiorResponse")]
        WcfServicioVacunas.ReferenciaServicioVacunas2.DtoVacunas[] GetTodasLasVacunasPorTopeSuperior(decimal precio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioVacunas/GetTodasLasVacunasPorTopeSuperior", ReplyAction="http://tempuri.org/IServicioVacunas/GetTodasLasVacunasPorTopeSuperiorResponse")]
        System.Threading.Tasks.Task<WcfServicioVacunas.ReferenciaServicioVacunas2.DtoVacunas[]> GetTodasLasVacunasPorTopeSuperiorAsync(decimal precio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioVacunas/GetTodasLasVacunasPorTopeInferior", ReplyAction="http://tempuri.org/IServicioVacunas/GetTodasLasVacunasPorTopeInferiorResponse")]
        WcfServicioVacunas.ReferenciaServicioVacunas2.DtoVacunas[] GetTodasLasVacunasPorTopeInferior(decimal precio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioVacunas/GetTodasLasVacunasPorTopeInferior", ReplyAction="http://tempuri.org/IServicioVacunas/GetTodasLasVacunasPorTopeInferiorResponse")]
        System.Threading.Tasks.Task<WcfServicioVacunas.ReferenciaServicioVacunas2.DtoVacunas[]> GetTodasLasVacunasPorTopeInferiorAsync(decimal precio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioVacunas/GetTodasLasVacunasPorNombreLab", ReplyAction="http://tempuri.org/IServicioVacunas/GetTodasLasVacunasPorNombreLabResponse")]
        WcfServicioVacunas.ReferenciaServicioVacunas2.DtoVacunas[] GetTodasLasVacunasPorNombreLab(string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioVacunas/GetTodasLasVacunasPorNombreLab", ReplyAction="http://tempuri.org/IServicioVacunas/GetTodasLasVacunasPorNombreLabResponse")]
        System.Threading.Tasks.Task<WcfServicioVacunas.ReferenciaServicioVacunas2.DtoVacunas[]> GetTodasLasVacunasPorNombreLabAsync(string nombre);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicioVacunasChannel : WcfServicioVacunas.ReferenciaServicioVacunas2.IServicioVacunas, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicioVacunasClient : System.ServiceModel.ClientBase<WcfServicioVacunas.ReferenciaServicioVacunas2.IServicioVacunas>, WcfServicioVacunas.ReferenciaServicioVacunas2.IServicioVacunas {
        
        public ServicioVacunasClient() {
        }
        
        public ServicioVacunasClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServicioVacunasClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioVacunasClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioVacunasClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WcfServicioVacunas.ReferenciaServicioVacunas2.DtoVacunas[] GetTodasLasVacunas() {
            return base.Channel.GetTodasLasVacunas();
        }
        
        public System.Threading.Tasks.Task<WcfServicioVacunas.ReferenciaServicioVacunas2.DtoVacunas[]> GetTodasLasVacunasAsync() {
            return base.Channel.GetTodasLasVacunasAsync();
        }
        
        public WcfServicioVacunas.ReferenciaServicioVacunas2.DtoVacunas[] GetTodasLasVacunasPorNombre(string nombre) {
            return base.Channel.GetTodasLasVacunasPorNombre(nombre);
        }
        
        public System.Threading.Tasks.Task<WcfServicioVacunas.ReferenciaServicioVacunas2.DtoVacunas[]> GetTodasLasVacunasPorNombreAsync(string nombre) {
            return base.Channel.GetTodasLasVacunasPorNombreAsync(nombre);
        }
        
        public WcfServicioVacunas.ReferenciaServicioVacunas2.DtoVacunas[] GetTodasLasVacunasPorFaseAprob(int faseClinicaAprob) {
            return base.Channel.GetTodasLasVacunasPorFaseAprob(faseClinicaAprob);
        }
        
        public System.Threading.Tasks.Task<WcfServicioVacunas.ReferenciaServicioVacunas2.DtoVacunas[]> GetTodasLasVacunasPorFaseAprobAsync(int faseClinicaAprob) {
            return base.Channel.GetTodasLasVacunasPorFaseAprobAsync(faseClinicaAprob);
        }
        
        public WcfServicioVacunas.ReferenciaServicioVacunas2.DtoVacunas[] GetTodasLasVacunasPorPaisLab(string pais) {
            return base.Channel.GetTodasLasVacunasPorPaisLab(pais);
        }
        
        public System.Threading.Tasks.Task<WcfServicioVacunas.ReferenciaServicioVacunas2.DtoVacunas[]> GetTodasLasVacunasPorPaisLabAsync(string pais) {
            return base.Channel.GetTodasLasVacunasPorPaisLabAsync(pais);
        }
        
        public WcfServicioVacunas.ReferenciaServicioVacunas2.DtoVacunas[] GetTodasLasVacunasPorTipoVac(string idTipo) {
            return base.Channel.GetTodasLasVacunasPorTipoVac(idTipo);
        }
        
        public System.Threading.Tasks.Task<WcfServicioVacunas.ReferenciaServicioVacunas2.DtoVacunas[]> GetTodasLasVacunasPorTipoVacAsync(string idTipo) {
            return base.Channel.GetTodasLasVacunasPorTipoVacAsync(idTipo);
        }
        
        public WcfServicioVacunas.ReferenciaServicioVacunas2.DtoVacunas[] GetTodasLasVacunasPorTopeSuperior(decimal precio) {
            return base.Channel.GetTodasLasVacunasPorTopeSuperior(precio);
        }
        
        public System.Threading.Tasks.Task<WcfServicioVacunas.ReferenciaServicioVacunas2.DtoVacunas[]> GetTodasLasVacunasPorTopeSuperiorAsync(decimal precio) {
            return base.Channel.GetTodasLasVacunasPorTopeSuperiorAsync(precio);
        }
        
        public WcfServicioVacunas.ReferenciaServicioVacunas2.DtoVacunas[] GetTodasLasVacunasPorTopeInferior(decimal precio) {
            return base.Channel.GetTodasLasVacunasPorTopeInferior(precio);
        }
        
        public System.Threading.Tasks.Task<WcfServicioVacunas.ReferenciaServicioVacunas2.DtoVacunas[]> GetTodasLasVacunasPorTopeInferiorAsync(decimal precio) {
            return base.Channel.GetTodasLasVacunasPorTopeInferiorAsync(precio);
        }
        
        public WcfServicioVacunas.ReferenciaServicioVacunas2.DtoVacunas[] GetTodasLasVacunasPorNombreLab(string nombre) {
            return base.Channel.GetTodasLasVacunasPorNombreLab(nombre);
        }
        
        public System.Threading.Tasks.Task<WcfServicioVacunas.ReferenciaServicioVacunas2.DtoVacunas[]> GetTodasLasVacunasPorNombreLabAsync(string nombre) {
            return base.Channel.GetTodasLasVacunasPorNombreLabAsync(nombre);
        }
    }
}
